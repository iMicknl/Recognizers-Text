---
TillRegex: !nestedRegex
  def: (?<till>\b(to|till|til|until|thru|through)\b|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
RangeConnectorRegex : !nestedRegex
  def: (?<and>\b(and|through|to)\b|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
RelativeRegex: !simpleRegex
  def: \b(?<order>dit|volgende|komende|aankomende|aanstaande|deze|huidige|vorig|verleden|voorgaande|vorige|laatste)\b
StrictRelativeRegex: !simpleRegex
  def: \b(?<order>dit|volgende|komende|aankomende|aanstaande|deze|huidige|vorig|verleden|voorgaande|vorige|laatste)\b
UpcomingPrefixRegex: !simpleRegex
  def: .^
# TODO: modify below regex according to the counterpart in English
NextPrefixRegex: !nestedRegex
  def: \b(volgende|komende|aankomende|{UpcomingPrefixRegex})\b
  references: [ UpcomingPrefixRegex ]
AfterNextSuffixRegex: !simpleRegex
  def: \b(na\s+(de\s+)?volgende)\b
PastPrefixRegex: !simpleRegex
  def: .^
# TODO: modify below regex according to the counterpart in English
PreviousPrefixRegex: !nestedRegex
  def: (voorgaande|vorig|verleden|vorige|laatste|{PastPrefixRegex})\b
  references: [ PastPrefixRegex ]
ThisPrefixRegex: !simpleRegex
  def: (deze|huidige|aanstaande|aankomende|komende)\b
RangePrefixRegex: !simpleRegex
  def: (van|tot)
CenturySuffixRegex: !simpleRegex
  def: (^eeuw)\b
ReferencePrefixRegex: !simpleRegex
  def: (dezelfde|dat)\b
FutureSuffixRegex: !simpleRegex
  def: \b(in\s+de\s+)?(toekomst)\b
DayRegex: !simpleRegex
  def: (de\s*)?(?<day>01|02|03|04|05|06|07|08|09|10th|10|11th|11st|11|12nd|12th|12|13rd|13th|13|14th|14|15th|15|16th|16|17th|17|18th|18|19th|19|1st|1|20th|20|21st|21th|21|22nd|22th|22|23rd|23th|23|24th|24|25th|25|26th|26|27th|27|28th|28|29th|29|2nd|2|30th|30|31st|31|3rd|3|4th|4|5th|5|6th|6|7th|7|8th|8|9th|9)(?=\b|t)
ImplicitDayRegex: !simpleRegex
  def: (de\s*)?(?<day>(10|11|11|12|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|30|31|3|4|5|6|7|8|9)(e|ste|de))\b
MonthNumRegex: !simpleRegex
  def: (?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\b
WrittenOneToNineRegex: !simpleRegex
  def: (één|een|twee|drie|vier|vijf|zes|zeven|acht|negen)
WrittenElevenToNineteenRegex: !simpleRegex
  def: (elf|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien)
WrittenTensRegex: !simpleRegex
  def: (tien|twintig|dertig|veertig|vijftig|zestig|zeventig|tachtig|negentig)
WrittenNumRegex: !nestedRegex
  def: ({WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|({WrittenOneToNineRegex}\s+)?{WrittenTensRegex})
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
WrittenCenturyFullYearRegex: !nestedRegex
  def: ((twee)\s*duizend(\s+en)?(\s*{WrittenOneToNineRegex}\s+honderd)?)
  references: [ WrittenOneToNineRegex]
WrittenCenturyOrdinalYearRegex: !simpleRegex
  def: (twenty one|twenty two|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)
CenturyRegex: !nestedRegex
  def: \b(?<century>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}(\s+honderd)?(\s+en)?)\b
  references: [WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex ]
LastTwoYearNumRegex: !nestedRegex
  def: (zero\s+{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}(\s+{WrittenOneToNineRegex})?)
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
FullTextYearRegex: !nestedRegex
  def: \b((?<firsttwoyearnum>{CenturyRegex})\s+(?<lasttwoyearnum>{LastTwoYearNumRegex})\b|\b(?<firsttwoyearnum>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}\s+hundred(\s+and)?))\b
  references: [ CenturyRegex, WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex, LastTwoYearNumRegex ]
# As month number can't be 0, so add (?!\.0\b) to filter out some wrong cases
OclockRegex: !simpleRegex
  def: (?<oclock>uur)
SpecialDescRegex: !simpleRegex
  def: (p\b)
AmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: ({BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: ((({OclockRegex}\s+)?(?<desc>({AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})))|{OclockRegex})
  references: [ OclockRegex, AmDescRegex, PmDescRegex, AmPmDescRegex, SpecialDescRegex ]
# Exclude cases that include the "Am/Pm" suffix
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-27-9]\d))(?!(\s*((\:)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
WeekDayRegex: !simpleRegex
  def: \b(?<weekday>maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag|zondag|ma|ma.|di|di.|wo|wo.|woe|woe.|do|do.|vr|vr.|vrij|za|za.|zat|zat.|zo|zo.)s?\b
SingleWeekDayRegex: !simpleRegex
  def: \b(?<weekday>maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag|zondag|ma|ma.|di|di.|wo|wo.|woe|woe.|do|do.|vr|vr.|vrij|za|za.|zat|zat.|zo|zo.)s?\b
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>((van\s+)?de\s+)?{RelativeRegex}\s+maand)\b
  references: [RelativeRegex]
WrittenMonthRegex: !simpleRegex
  def: (((de\s+)?maand\s+)?(?<month>januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|december|jan|feb|mar|apr|jun|jul|aug|sep|sept|oct|okt|nov|dec))
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>((in|van)\s+)?({RelativeMonthRegex}|{WrittenMonthRegex}))
  references: [ RelativeMonthRegex, WrittenMonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>decades?|jaren?|maanden?|weken?|(?<business>werk\s+)?dagen?)\b
DateTokenPrefix: 'op '
TimeTokenPrefix: 'om '
TokenBeforeDate: 'op '
TokenBeforeTime: 'om '
SimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex}\s+{MonthSuffixRegex}|{MonthSuffixRegex}\s+{DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex, RangePrefixRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?{MonthSuffixRegex}\s+((van)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex, RangePrefixRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+(tussen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: \b(tussen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
MonthWithYear: !nestedRegex
  def: \b(({WrittenMonthRegex}(\.)?(\s*)[/\\\-\.,]?(\s+of)?(\s*)({YearRegex}|(?<order>following|next|last|this)\s+jaar))|(({YearRegex}|(?<order>following|next|last|this)\s+jaar)(\s*),?(\s*){WrittenMonthRegex}))\b
  references: [ WrittenMonthRegex, YearRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b((((de\s+)?maand van\s+)?({StrictRelativeRegex}\s+)?(?<month>januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|december|jan|feb|mar|apr|jun|jul|aug|sep|sept|oct|okt|nov|dec))|(maand|jaar) tot heden|({RelativeRegex}\s+)?(my\s+)?(weekend|week|maand|jaar)(?!((\s+of)?\s+\d+|\s+tot\s+heden))(\s+{AfterNextSuffixRegex})?)\b
  references: [ StrictRelativeRegex, RelativeRegex, AfterNextSuffixRegex ]
MonthNumWithYear: !nestedRegex
  def: \b(({BaseDateTime.FourDigitYearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-](\s*){BaseDateTime.FourDigitYearRegex}))\b
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: \b(?<wom>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+week\s+{MonthSuffixRegex})\b
  references: [ MonthSuffixRegex ]
WeekOfYearRegex: !nestedRegex
  def: \b(?<woy>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+week(\s+van)?\s+({YearRegex}|{RelativeRegex}\s+jaar))\b
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterTermRegex: !simpleRegex
  def: \b(((?<cardinal>eerste|1e|1ste|tweede|2e|2de|derde|3e|3de|vierde|4e|4de)[ -]+kwartaal)|(Q(?<number>[1-4])))\b
QuarterRegex: !nestedRegex
  def: (het\s+)?{QuarterTermRegex}((\s+of|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+jaar))?
  references: [ YearRegex, RelativeRegex, QuarterTermRegex ]
QuarterRegexYearFront: !nestedRegex
  def: ({YearRegex}|{RelativeRegex}\s+jaar)('s)?\s+(the\s+)?{QuarterTermRegex}
  references: [ YearRegex, RelativeRegex, QuarterTermRegex ]
HalfYearTermRegex: !simpleRegex
  def: (?<cardinal>eerste|1e|1ste|tweede|2e|1de)\s+(helft)
HalfYearFrontRegex: !nestedRegex
  def: (?<jaar>((1[5-9]|20)\d{2})|2100)\s*(the\s+)?H(?<number>[1-2])
  references: [ YearRegex ]
HalfYearBackRegex: !nestedRegex
  def: (het\s+)?(H(?<number>[1-2])|({HalfYearTermRegex}))(\s+van|\s*,\s*)?\s+({YearRegex})
  references: [ YearRegex, HalfYearTermRegex ]
HalfYearRelativeRegex: !nestedRegex
  def: (het\s+)?{HalfYearTermRegex}(\s+van|\s*,\s*)?\s+({RelativeRegex}\s+jaar)
  references: [ RelativeRegex, HalfYearTermRegex ]
AllHalfYearRegex: !nestedRegex
  def: ({HalfYearFrontRegex})|({HalfYearBackRegex})|({HalfYearRelativeRegex})
  references: [ HalfYearFrontRegex, HalfYearBackRegex, HalfYearRelativeRegex ]
EarlyPrefixRegex: !simpleRegex
  def: \b(?<EarlyPrefix>early|beginning of|start of|(?<RelEarly>earlier(\s+in)?))\b
MidPrefixRegex: !simpleRegex
  def: \b(?<MidPrefix>mid-?|middle of)\b
LaterPrefixRegex: !simpleRegex
  def: \b(?<LatePrefix>late|end of|(?<RelLate>later(\s+in)?))\b
PrefixPeriodRegex: !nestedRegex
  def: ({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})
  references: [EarlyPrefixRegex, MidPrefixRegex, LaterPrefixRegex]
PrefixDayRegex: !simpleRegex
  def: \b((?<EarlyPrefix>eerder)|(?<MidPrefix>midden)|(?<LatePrefix>later))(\s+op)?(\s+de\s+dag)?$
SeasonDescRegex: !simpleRegex
  def: (?<seas>lente|zomer|herfst|winter)
SeasonRegex: !nestedRegex
  def: \b(?<season>({PrefixPeriodRegex}\s+)?({RelativeRegex}\s+)?{SeasonDescRegex}((\s+of|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+jaar))?)\b
  references: [ YearRegex, RelativeRegex, SeasonDescRegex, PrefixPeriodRegex ]
WhichWeekRegex: !simpleRegex
  def: (week)(\s*)(?<number>\d\d|\d|0\d)
WeekOfRegex: !simpleRegex
  def: (de\s+)?(week)(\s+van)(\s+de)?
MonthOfRegex: !simpleRegex
  def: (maand)(\s*)(van)
MonthRegex: !simpleRegex
  def: (?<month>januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|december|jan|feb|mar|apr|jun|jul|aug|sep|sept|oct|okt|nov|dec)
#Cases collected from mined data 
AmbiguousMonthP0Regex: !simpleRegex
  def: \b((^may i)|(i|you|he|she|we|they)\s+may|(may\s+((((also|not|(also not)|well)\s+)?(be|contain|constitute|email|e-mail|take|have|result|involve|get|work|reply))|(or may not))))\b
AmDescRegex: !simpleRegex
  def: (am\b|a\.m\.|a m\b|a\. m\.|a\.m\b|a\. m\b|a m\b)
PmDescRegex: !simpleRegex
  def: (pm\b|p\.m\.|p\b|p m\b|p\. m\.|p\.m\b|p\. m\b|p m\b)
#This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016. 
#The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>((1\d|20)\d{2})|2100|(([0-27-9]\d)\b(?!(\s*((\:)|{AmDescRegex}|{PmDescRegex})))))
  references: [ AmDescRegex, PmDescRegex ]
YearSuffix: !nestedRegex
  def: (,?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
OnRegex: !nestedRegex
  def: (?<=\bop\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(op\s+de\s+))((?<day>10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)(e|ste|de)s?)\b
PrefixWeekDayRegex: !simpleRegex
  def: (\s*((,?\s*on)|[-—–]))
ThisRegex: !nestedRegex
  def: \b((deze(\s*week)?(\s*op)?\s+){WeekDayRegex})|({WeekDayRegex}((\s+van)?\s+deze\s*week))\b
  references: [ WeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b({PreviousPrefixRegex}(\s*week)?\s+{WeekDayRegex})|({WeekDayRegex}(\s+vorige\s*week))\b
  references: [ PreviousPrefixRegex, WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: \b({NextPrefixRegex}(\s*week(\s*,?\s*op)?)?\s+{WeekDayRegex})|((op\s+)?{WeekDayRegex}((\s+of)?\s+(the\s+following|(de\s+)?volgende)\s*week))\b
  references: [ NextPrefixRegex, WeekDayRegex ]
SpecialDayRegex: !nestedRegex
  def: \b(eergisteren|overmorgen|((de\s+)?({RelativeRegex})\s+dag)|gisteren|morgen|vandaag)\b
  references: [ RelativeRegex ]
SpecialDayWithNumRegex: !nestedRegex
  def: \b((?<number>{WrittenNumRegex})\s+dagen?\s+(vanaf)\s+(?<day>gisteren|morgen|vandaag))\b
  references: [ WrittenNumRegex ]
RelativeDayRegex: !nestedRegex
  def: \b(((de\s+)?{RelativeRegex}\s+dag))\b
  references: [ RelativeRegex ]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>op\s+)?(?<weekday>morgen|middag|avond|nacht|zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)s\b
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+{WeekDayRegex}\s+{MonthSuffixRegex})
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !nestedRegex
  def: \b({WrittenNumRegex}\s+{WeekDayRegex}\s+(vanaf\s+nu|later))\b
  references: [ WrittenNumRegex, WeekDayRegex ]
SpecialDate: !nestedRegex
  def: (?=\b(over|op)\s+de\s+){DayRegex}\b
  references: [ DayRegex ]
DatePreposition: !simpleRegex
  def: \b(op|in)
DateExtractor1: !nestedRegex
  def: \b(({WeekDayRegex})(\s+|\s*,\s*))?({DayRegex})((\s*){MonthRegex})\b
  references: [ WeekDayRegex, DayRegex, MonthRegex ]
DateExtractor2: !nestedRegex
  def: \b{DateExtractor1}(\s+|\s*,\s*|\s+in\s+){DateYearRegex}\b
  references: [ DateExtractor1, DateYearRegex ]
DateExtractor3: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}(\.)?(\s+|\s*,\s*|\s+of\s+|\s*-\s*){MonthRegex}(\.)?((\s+|\s*,\s*){DateYearRegex})?\b
  references: [ WeekDayRegex, DayRegex, MonthRegex, DateYearRegex ]
DateExtractor4: !nestedRegex
  def: \b{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}(\.)?\s*[/\\\-]\s*{DateYearRegex}
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor5: !nestedRegex
  def: \b{DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex}
  references: [ DayRegex, MonthNumRegex, MonthRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: (?<={DatePreposition}\s+)({WeekDayRegex}\s+)?{MonthNumRegex}[\-\.]{DayRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, DatePreposition ]
DateExtractor7L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}((\s+|\s*,\s*|\s+in\s+){DateYearRegex})(?![%])\b
  references: [ MonthNumRegex, DayRegex, DateYearRegex, WeekDayRegex ]
DateExtractor7S: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, DateYearRegex, WeekDayRegex ]
# The only difference between 7L and 7S is whether "Year" part is required
# We have both the long and short Regex because we would like to catch both "11/20, 12" and "11/20, 12/20"
# Only use the long Regex would ignore "11/20" in "11/20, 12/20" and it is hard to exhaust all characters after the "year" as we also have cases like "11/20, 12 of April"
# Same for DateExtractor9L and DateExtractor9S
DateExtractor8: !nestedRegex
  def: (?<={DatePreposition}\s+)({WeekDayRegex}\s+)?{DayRegex}[\\\-]{MonthNumRegex}(?![%])\b
  references: [ DayRegex, MonthNumRegex, WeekDayRegex, DatePreposition ]
DateExtractor9L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{DayRegex}\s*[-|\/|.]\s*{MonthNumRegex}((\s+|\s*,\s*|\s+in\s+){DateYearRegex})(?![%])\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, WeekDayRegex ]
DateExtractor9S: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{DayRegex}\s*[-|\/|.]\s*{MonthNumRegex}(?![%])\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, WeekDayRegex ]
DateExtractorA: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{MonthNumRegex}\s*[/\\\-\.]\s*{DayRegex}
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex, DayRegex, WeekDayRegex ]
OfMonth: !nestedRegex
  def: ^\s*of\s*{MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*(de)?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '(deze\s+)?{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>jaren|jaar|maanden|maand|weken|week)\b
OclockRegex: !simpleRegex
  def: (?<oclock>uur)
DescRegex: !nestedRegex
  def: ((({OclockRegex}\s+)?(?<desc>ampm|am\b|a\.m\.|a m\b|a\. m\.|a\.m\b|a\. m\b|a m\b|pm\b|p\.m\.|p m\b|p\. m\.|p\.m\b|p\. m\b|p\b|p m\b))|{OclockRegex})
  references: [ OclockRegex ]
HourNumRegex: !simpleRegex
  def: \b(?<hournum>nul|een|één|twee|drie|vier|vijf|zes|zeven|acht|negen|tien|elf|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|eenentwintig|tweeentwintig|drieentwintig|vierentwintig)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|forty|fifty)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|forty|fifty)
PmRegex: !simpleRegex
  def: (?<pm>(((at|in|around|on|for)\s+(the\s+)?)?(afternoon|evening|midnight|lunchtime))|((at|in|around|on|for)\s+(the\s+)?night))
PmRegexFull: !simpleRegex
  def: (?<pm>((at|in|around|on|for)\s+(the\s+)?)?(afternoon|evening|midnight|night|lunchtime))
AmRegex: !simpleRegex
  def: (?<am>((at|in|around|on|for)\s+(the\s+)?)?(morgen))
LunchRegex: !simpleRegex
  def: \b(lunchtijd)\b
NightRegex: !simpleRegex
  def: \b(middernacht|nacht|'s nachts)\b
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
LessThanOneHour: !nestedRegex
  def: (?<lth>kwart voor|kwart over|half|{BaseDateTime.DeltaMinuteRegex}(\s+(minuten))|{DeltaMinuteNumRegex}(\s+(minuten)))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
WrittenTimeRegex: !nestedRegex
  def: (?<writtentime>{MinuteNumRegex}\s+(over|voor)\s+({HourNumRegex}|{HourNumRegex}\s+({MinuteNumRegex}|(?<tens>twenty|thirty|forty|fourty|fifty)\s+{MinuteNumRegex}))
  references: [ HourNumRegex, MinuteNumRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>({LessThanOneHour} na|{LessThanOneHour} voor))
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
TimeSuffixFull: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegexFull}|{OclockRegex})
  references: [ AmRegex, PmRegexFull, OclockRegex ]
BasicTime: !nestedRegex
  def: \b(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>middernacht)
MidmorningRegex: !simpleRegex
  def: (?<midmorning>halverwege de ochtend)
MidafternoonRegex: !simpleRegex
  def: (?<midafternoon>halverwege de middag|namiddag)
MiddayRegex: !simpleRegex
  def: (?<midday>middag|middaguur)
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: \b(((?<=\bat\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(?!\.\d)(\s*((?<iam>a)|(?<ipm>p)))?|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: '\b({BaseDateTime.HourRegex}(-|——)?ish|noonish|noon)\b'
  references: [ BaseDateTime.HourRegex ]
TimeUnitRegex: !simpleRegex
  def: ([^A-Za-z]{1,}|\b)(?<unit>uren|uur|u|minuten|minuut|min|secondes|seconden|seconde|secs|sec)\b
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>uur|minuut)\b
FivesRegex: !simpleRegex
  def: (?<tens>(fifteen|twenty(\s*five)?|thirty(\s*five)?|forty(\s*five)?|fourty(\s*five)?|fifty(\s*five)?|ten|five))\b
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodHourNumRegex: !simpleRegex
  def: \b(?<hour>twenty one|twenty two|twenty three|twenty four|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\b
ConnectNumRegex: !nestedRegex
  def: '\b{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegexWithDotConnector: !nestedRegex
  def: ({BaseDateTime.HourRegex}(\s*\.\s*){BaseDateTime.MinuteRegex})
  references: [ BaseDateTime.HourRegex, BaseDateTime.MinuteRegex ]
TimeRegex1: !nestedRegex
  def: \b({TimePrefix}\s+)?({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\s*{DescRegex}
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  def: (\b{TimePrefix}\s+)?(T)?{BaseDateTime.HourRegex}(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: \b{TimePrefix}\s+{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: \b{TimePrefix}\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimePrefix, BasicTime, DescRegex ]
TimeRegex6: !nestedRegex
  def: '{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b'
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: \b{TimeSuffixFull}\s+at\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex8: !nestedRegex
  def: \b{TimeSuffixFull}\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: \b{PeriodHourNumRegex}\s+{FivesRegex}((\s*{DescRegex})|\b)
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: \b({TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex11: !nestedRegex
  def: \b(({TimeTokenPrefix}{TimeRegexWithDotConnector})(?!\s*per\s*cent|%)|({TimeRegexWithDotConnector}(\s*{DescRegex})))
  references: [ TimeTokenPrefix, TimeRegexWithDotConnector, DescRegex ]
FirstTimeRegexInTimeRange: !nestedRegex
  def: \b{TimeRegexWithDotConnector}(\s*{DescRegex})?
  references: [ TimeRegexWithDotConnector, DescRegex ]
PureNumFromTo: !nestedRegex
  def: ((from|between)\s+)?({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: (between\s+)({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{RangeConnectorRegex}\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !nestedRegex
  def: ((from|between)\s+)?(?<time1>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{TillRegex}\s*(?<time2>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, TillRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex ]
SpecificTimeBetweenAnd: !nestedRegex
  def: (between\s+)(?<time1>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{RangeConnectorRegex}\s*(?<time2>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, RangeConnectorRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex ]
PrepositionRegex: !simpleRegex
  def: (?<prep>^(at|on|of)(\s+the)?$)
TimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>((((in\s+(the)?\s+)?((?<early>early(\s+|-))|(?<late>late(\s+|-)))?(morning|afternoon|night|evening)))|(((in\s+(the)?\s+)?)(daytime|business\s+hour)))s?)\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+{TimeOfDayRegex})\b|\btonight)s?\b
  references: [ TimeOfDayRegex, StrictRelativeRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
BusinessHourSplitStrings: ['business', 'hour']
NowRegex: !simpleRegex
  def: \b(?<now>(right\s+)?now|as soon as possible|asap|recently|previously)\b
SuffixRegex: !simpleRegex
  def: ^\s*(in the\s+)?(morning|afternoon|evening|night)\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>morning|afternoon|night|evening)\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})\b|\btonight)\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?(in\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(at|around|in|on))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?(in\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '\b{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(at|around))?\s*({HourNumRegex}|{BaseDateTime.HourRegex})\b'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: (the\s+)?end of(\s+the)?\s*$
UnspecificEndOfRegex: !simpleRegex
  def: \b(the\s+)?(eod|(end\s+of\s+day))\b
UnspecificEndOfRangeRegex: !simpleRegex
  def: \b(eoy)\b
PeriodTimeOfDayRegex: !simpleRegex
  def: \b((in\s+(the)?\s+)?((?<early>early(\s+|-))|(?<late>late(\s+|-)))?(?<timeOfDay>morning|afternoon|night|evening))\b
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+{PeriodTimeOfDayRegex})\b|\btonight)\b
  references: [ PeriodTimeOfDayRegex, StrictRelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: \b(({TimeOfDayRegex}(\s+(on|of))?))\b
 references: [ TimeOfDayRegex ]
LessThanRegex: !simpleRegex
  def: \b(less\s+than)\b
MoreThanRegex: !simpleRegex
  def: \b(more\s+than)\b
DurationUnitRegex: !nestedRegex
  def: (?<unit>{DateUnitRegex}|hours?|hrs?|h|minutes?|mins?|seconds?|secs?)\b
  references: [ DateUnitRegex ]
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(and)\s+((an|a)\s+)?(?<suffix_num>half|kwart))
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>dagelijks|maandelijks|wekelijks|twee-wekelijks|jaarlijks)\b
EachUnitRegex: !nestedRegex
  def: (?<each>(iedere|elke)(?<other>\s+other)?\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(each|(every))\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(each|(every))\s*)
SetLastRegex: !simpleRegex
  def: (?<last>volgende|komende|aankomende|aanstaande|deze|huidige|aanstaande|vorig|verleden|vorige|laatste)
EachDayRegex: !simpleRegex
  def: ^\s*(elke)\s*dag\b
DurationFollowedUnit: !nestedRegex
  def: ^\s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex}
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b((?<half>half\s+)?(an|a)|another)\s+{DurationUnitRegex}
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  def: \b(for|during)\s+the\s+(?<unit>jaar|maand|week|dag)\b
AllRegex: !simpleRegex
  def: \b(?<all>(all|full|whole)(\s+|-)(?<unit>jaar|maand|week|dag))\b
HalfRegex: !simpleRegex
  def: (((een)\s*)|\b)(?<half>half\s+(?<unit>jaar|maand|week|dag|uur))\b
ConjunctionRegex: !simpleRegex
  def: \b((and(\s+for)?)|with)\b
HolidayRegex1: !nestedRegex
  def: \b(?<holiday>pasen|kerst|kerstavond|xmas|thanksgiving|halloween|yuandan|oudejaarsavond|silvester|silvesteravond)(\s+(van\s+|in\s+)?({YearRegex}|{RelativeRegex}\s+jaar))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex2: !nestedRegex
  def: \b(?<holiday>nationale dodenherdenking|nationale herdenking|dodenherdenking|dag van de leraar|dag van de arbeid)(\s+(van\s+|in\s+)?({YearRegex}|{RelativeRegex}\s+jaar))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex3: !nestedRegex # -dag suffix
  def: (?<holiday>(valentijns|valetijns|nieuwjaars|prinsjes|konings|koninginne|bevrijdings|hemelvaarts|eerste kerst|1e kerst|tweede kerst|2e kerst|vaders|vader|moeders|moeder|meisjes|amerikaanse onafhankelijkheids|onafhankelijkheids|dankzeggings|bosmarmotten|inauguratie|boomplant|boomfeest|vrijgezellen|nederlandse veteranen|veteranen)\s*(dag))(\s+(van\s+|in\s+)?({YearRegex}|{RelativeRegex}\s+jaar))?
  references: [ YearRegex, RelativeRegex ]
DateTokenPrefix: 'op '
TimeTokenPrefix: 'om '
TokenBeforeDate: 'op '
TokenBeforeTime: 'om '
AMTimeRegex: !simpleRegex
  def: (?<am>'s morgens)
PMTimeRegex: !simpleRegex
  def: \b(?<pm>'s middags|'s avonds|'s nachts)\b
InclusiveModPrepositions: !simpleRegex
  def: (?<include>((on|in|at)\s+or\s+)|(\s+or\s+(on|in|at)))
BeforeRegex: !nestedRegex
  def: (\b{InclusiveModPrepositions}?(before|in\s+advance\s+of|prior\s+to|(no\s+later|earlier|sooner)\s+than|ending\s+(with|on)|by|till|til|until|(?<include>as\s+late\s+as)){InclusiveModPrepositions}?\b\s*)|(?<!\w|>)((?<include><=)|<)
  references: [ InclusiveModPrepositions ]
AfterRegex: !nestedRegex
  def: (\b{InclusiveModPrepositions}?((after|(?<!no\s+)later than)|(year greater than))(?!\s+or equal to){InclusiveModPrepositions}?\b\s*)|(?<!\w|<)((?<include>>=)|>)
  references: [ InclusiveModPrepositions ]
SinceRegex: !simpleRegex
  def: (\b(since|after\s+or\s+equal\s+to|starting\s+(from|on|with)|as\s+early\s+as|any\s+time\s+from)\b\s*)|(?<!\w|<)(>=)
AroundRegex: !simpleRegex
  def: (\b(rondom|ongeveer|rond)\s*\b)
AgoRegex: !simpleRegex
  def: \b(vanaf|voor\s+(?<day>gisteren|vandaag))\b
LaterRegex: !simpleRegex
  def: \b(later|vanaf nu|(van|na) (?<day>morgen|vandaag))\b
InConnectorRegex: !simpleRegex
  def: \b(in|over)\b
WithinNextPrefixRegex: !nestedRegex
  def: \b(in(\s+de)?(\s+(?<next>{NextPrefixRegex}))?)\b
  references: [ NextPrefixRegex ]
# "next" group here is used to judge for illegal cases like "within the next 5 days before today"
AmPmDescRegex: !simpleRegex
  def: (ampm)
MorningStartEndRegex: !nestedRegex
  def: (^('s morgens|in de morgen|{AmDescRegex}))|(('s morgens|in de morgen|{AmDescRegex})$)
  references: [ AmDescRegex ]
AfternoonStartEndRegex: !nestedRegex
  def: (^('s middags|in de middag|{PmDescRegex}))|(('s middags|in de middag|{PmDescRegex})$)
  references: [ PmDescRegex ]
EveningStartEndRegex: !simpleRegex
  def: (^(avond|'s avonds|in de avond))|((avond|'s avonds|in de avond)$)
NightStartEndRegex: !simpleRegex
  def: (^(gedurende de nacht|vannacht|nacht|'s nachts))|((gedurende de nacht|vannacht|'s nachts|nacht)$)
InexactNumberRegex: !simpleRegex
  def: \b(a few|few|some|several|(?<NumTwoTerm>(a\s+)?couple(\s+of)?))\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: ((({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+({TimeUnitRegex}))|((the|my))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (((?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+)({DurationUnitRegex}))|((the|my))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !nestedRegex
  def: \b{ReferencePrefixRegex}\s+(?<duration>week|maand|jaar|decennium|weekend)\b
  references: [ReferencePrefixRegex]
ConnectorRegex: !simpleRegex
  def: ^(-|,|for|t|around|@)$
FromToRegex: !simpleRegex
  def: \b(van).+(tot)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(de\s+)?(mei)$
# Filter ambiguous single word datetime extractions in CalendarMode or when adding the modifier
SingleAmbiguousTermsRegex: !simpleRegex
  def: ^(de\s+)?(dag|week|maand|jaar)$
UnspecificDatePeriodRegex: !simpleRegex
  def: ^(week|weekend|maand|jaar)$
PrepositionSuffixRegex: !simpleRegex
  def: \b(on|in|at|around|from|to)$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?[A-Za-z\d]+)
ForTheRegex: !nestedRegex
  def: \b((((?<=for\s+)de\s+{FlexibleDayRegex})|((?<=om\s+)(de\s+)?{FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\s*(,|\.|!|\?|$)))
  references: [FlexibleDayRegex]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(de\s+{FlexibleDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(?!(de)){DayRegex}(?!([-]|(\s+({AmDescRegex}|{PmDescRegex}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex]
RestOfDateRegex: !simpleRegex
  def: \bRest\s+(of\s+)?((the|my|this|current)\s+)?(?<duration>week|maand|jaar|decennium)\b
RestOfDateTimeRegex: !simpleRegex
  def: \bRest\s+(of\s+)?((the|my|this|current)\s+)?(?<unit>day)\b
MealTimeRegex: !simpleRegex
  def: \b(tijdens de\s+)?(?<mealTime>lunch)\b
NumberEndingPattern: !nestedRegex
  def: ^(\s+(?<meeting>meeting|appointment|conference|call|skype call)\s+to\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\.)?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
OneOnOneRegex: !simpleRegex
  def: \b(1\s*:\s*1)|(one (on )?one|one\s*-\s*one|one\s*:\s*one)\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b({PrefixPeriodRegex})\s*\b\s*(?<suffix>{OneWordPeriodRegex})\b
  references: [PrefixPeriodRegex, OneWordPeriodRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|this)\s+week)((\s+between\s+{WeekDayRegex}\s+and\s+{WeekDayRegex})|(\s+from\s+{WeekDayRegex}\s+to\s+{WeekDayRegex})))\b
  references: [NextPrefixRegex, PreviousPrefixRegex, WeekDayRegex]
GeneralEndingRegex: !simpleRegex
  def: ^\s*((\.,)|\.|,|!|\?)?\s*$
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|and|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \bthe\s+
OrRegex: !simpleRegex
  def: \s*((\b|,\s*)(of|en)\b|,)\s*
YearPlusNumberRegex: !nestedRegex
  def: \b(Jaar\s+((?<year>(\d{3,4}))|{FullTextYearRegex}))\b
  references: [ FullTextYearRegex ]
NumberAsTimeRegex: !nestedRegex
  def: \b({WrittenTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ WrittenTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(voor|niet later dan|na)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+op)\s*$
DecadeRegex: !simpleRegex
  def: (?<decade>tweeduizend|21e eeuw|eenentwintigste eeuw)
DecadeWithCenturyRegex: !nestedRegex
  def: (de\s+)?(((?<century>\d|1\d|2\d)?(')?(?<decade>\d0)(')?s)|(({CenturyRegex}(\s+|-)(and\s+)?)?{DecadeRegex})|({CenturyRegex}(\s+|-)(and\s+)?(?<decade>tens|hundreds)))
  references: [ CenturyRegex, DecadeRegex ]
RelativeDecadeRegex: !nestedRegex
  def: \b((de\s+)?{RelativeRegex}\s+((?<number>[\w,]+)\s+)?decades?)\b
  references: [ RelativeRegex ]
DateAfterRegex: !simpleRegex
  def: \b((or|and)\s+(above|after|later|greater)(?!\s+than))\b
YearPeriodRegex: !nestedRegex
  def: ((((from|during|in)\s+)?{YearRegex}\s*({TillRegex})\s*{YearRegex})|(((between)\s+){YearRegex}\s*({RangeConnectorRegex})\s*{YearRegex}))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
ComplexDatePeriodRegex: !nestedRegex
  def: (((from|during|in)\s+)?(?<start>.+)\s*({TillRegex})\s*(?<end>.+)|((between)\s+)(?<start>.+)\s*({RangeConnectorRegex})\s*(?<end>.+))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    millennium: 1000Y
    eeuw: 100Y
    centennium: 100Y
    decennium: 10Y
    decennia: 10Y
    decenniën: 10Y
    jaren: Y
    jaar: Y
    maanden: MON
    maand: MON
    weken: W
    week: W
    dagen: D
    dag: D
    uren: H
    uur: H
    u: H
    minuten: M
    minuut: M
    min: M
    secondes: S
    seconde: S
    secs: S
    sec: S
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    decennium: 315360000
    decennia: 315360000
    decenniën: 315360000
    jaren: 31536000
    jaar: 31536000
    maanden: 2592000
    maand: 2592000
    weken: 604800
    week: 604800
    dagen: 86400
    dag: 86400
    uren: 3600
    uur: 3600
    u: 3600
    minuten: 60
    minuut: 60
    min: 60
    secondes: 1
    seconden: 1
    seconde: 1
    secs: 1
    sec: 1
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    lente: SP
    zomer: SU
    herfst: FA
    winter: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    first: 1
    1st: 1
    second: 2
    2nd: 2
    third: 3
    3rd: 3
    fourth: 4
    4th: 4
    fifth: 5
    5th: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    maandag: 1
    dinsdag: 2
    woensdag: 3
    donderdag: 4
    vrijdag: 5
    zaterdag: 6
    zondag: 0
    ma: 1
    ma.: 1 # TODO Is it also required to add a .? (like the German DateTime file)
    di: 2
    di.: 2
    wo: 3
    wo.: 3
    woe: 3
    woe.: 3
    do: 4
    do.: 4
    vr: 5
    vr.: 5
    vrij: 5
    vrij.: 5
    za: 6
    za.: 6
    zat: 6
    zat.: 6
    zo: 0
    zo.: 0
    zon: 0
    zon.: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'januari': 1
    'februari': 2
    'maart': 3
    'april': 4
    'mei': 5
    'juni': 6
    'juli': 7
    'augustus': 8
    'september': 9
    'oktober': 10
    'november': 11
    'december': 12
    'jan': 1
    'feb': 2
    'mar': 3
    'apr': 4
    'jun': 6
    'jul': 7
    'aug': 8
    'sep': 9
    'sept': 9
    'oct': 10
    'okt': 10
    'nov': 11
    'dec': 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'nul': 0
    'een': 1
    'één': 1
    'twee': 2
    'drie': 3
    'vier': 4
    'vijf': 5
    'zes': 6
    'zeven': 7
    'acht': 8
    'negen': 9
    'tien': 10
    'elf': 11
    'twaalf': 12
    'dertien': 13
    'veertien': 14
    'vijftien': 15
    'zestien': 16
    'zeventien': 17
    'achttien': 18
    'negentien': 19
    'twintig': 20
    'eenentwintig': 21
    'éénentwintig': 21
    'tweeentwintig': 22 # TODO Are both versions required?
    'tweeëntwintig': 22
    'drieëntwintig': 23
    'vierentwintig': 24
    'vijfentwintig': 25
    'zesentwintig': 26
    'zevenentwintig': 27
    'achtentwintig': 28
    'negenentwintig': 29
    'dertig': 30
    'eenendertig': 31
    'tweeëndertig': 32
    'drieëndertig': 33
    'vierendertig': 34
    'vijfendertig': 35
    'zesendertig': 36
    'zevenendertig': 37
    'achtendertig': 38
    'negenendertig': 39
    'veertig': 40
    'eenenveertig': 41
    'tweeënveertig': 42
    'drieënveertig': 43
    'vierenveertig': 44
    'vijfenveertig': 45
    'zesenveertig': 46
    'zevenenveertig': 47
    'achtenveertig': 48
    'negenenveertig': 49
    'eenenvijftig': 50
    'vijftig': 51
    'tweeënvijftig': 52
    'drieënvijftig': 53
    'vierenvijftig': 54
    'vijfenvijftig': 55
    'zesenvijftig': 56
    'zevenenvijftig': 57
    'achtenvijftig': 58
    'negenenvijftig': 59
    'zestig': 60
    'eenenzestig': 61
    'tweeënzestig': 62
    'drieënzestig': 63
    'vierenzestig': 64
    'vijfenzestig': 65
    'zesenzestig': 66
    'zevenenzestig': 67
    'achtenzestig': 68
    'negenenzestig': 69
    'drieënzeventig': 70
    'eenenzeventig': 71
    'tweeënzeventig': 72
    'zeventig': 73
    'vierenzeventig': 74
    'vijfenzeventig': 75
    'zesenzeventig': 76
    'zevenenzeventig': 77
    'achtenzeventig': 78
    'negenenzeventig': 79
    'tachtig': 80
    'eenentachtig': 81
    'tweeëntachtig': 82
    'drieëntachtig': 83
    'vierentachtig': 84
    'vijfentachtig': 85
    'zesentachtig': 86
    'zevenentachtig': 87
    'achtentachtig': 88
    'negenentachtig': 89
    'negentig': 90
    'eenennegentig': 91
    'tweeënnegentig': 92
    'drieënnegentig': 93
    'vierennegentig': 94
    'vijfennegentig': 95
    'zesennegentig': 96
    'zevenennegentig': 97
    'achtennegentig': 98
    'negenennegentig': 99
    'honderd': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1e': 1
    '1ste': 1
    '2e': 2
    '2de': 2
    '3e': 3
    '3de': 3
    '4e': 4
    '4de': 4
    '5e': 5
    '5de': 5
    '6e': 6
    '6de': 6
    '7e': 7
    '7de': 7
    '8e': 8
    '8de': 8
    '9e': 9
    '9de': 9
    '10e': 10
    '10de': 10
    '11e': 11
    '11de': 11
    '12e': 12
    '12de': 12
    '13e': 13
    '13de': 13
    '14e': 14
    '14de': 14
    '15e': 15
    '15de': 15
    '16e': 16
    '16de': 16
    '17e': 17
    '17de': 17
    '18e': 18
    '19e': 19
    '20e': 20
    '21e': 21
    '21e': 21
    '22e': 22
    '22e': 22
    '23e': 23
    '23e': 23
    '24e': 24
    '25e': 25
    '26e': 26
    '27e': 27
    '28e': 28
    '29e': 29
    '30e': 30
    '31e': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    half: 0.5
    halve: 0.5
    kwart: 0.25
    kwartaal: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries: 
    # Dutch specific Holidays
    kingsday: [ koningsdag ] # 27 april
    queensday: [ koninginnedag ] # 30 april
    prinsjesdag: [ prinsjesdag ] # 3rd Tuesday of September
    dodenherdenking: [ nationaledodenherdenking, nationaleherdenking, dodenherdenking] # 4 May
    bevrijdingsdag: [ bevrijdingsdag ] # 5 May
    hemelvaartsdag: [ hemelvaartsdag ] # 39 Days after Easter
    teachersday: [ dagvandeleraar ] # Dutch Teachersday is on a different date - 5 October
    veteransday: [ nederlandseveteranendag, veteranendag ] # Dutch Veteranendag is on a different date - last Saturday of June
    eerstekerstdag: [ eerstekerstdag, 1ekerstdag ] # 25 May
    tweedekerstdag: [ tweedekerstdag, 2ekerstdag ] # 26 May
    dagvandearbeid: [ dagvandearbeid, dagvandenarbeid ] # 1 May
    # International Holidays
    christmas: [ kerstfeest, kerstmis, kerst, xmas ]
    easterday: [ pasen ] 
    fathers: [ vaderdag, vadersdag ] 
    mothers: [ moederdag, moedersdag ] 
    singleday: [ singleday, vrijgezellendag ] 
    femaleday: [ femaleday, vrouwendag ]
    treeplantingday: [ boomplantdag, boomfeestdag ]
    girlsday: [ girlsday, meisjesdag ]
    newyear: [ oudennieuw, oud&nieuw ]
    newyearday: [ nieuwjaarsdag ]
    newyearsday: [ nieuwjaarsdag ]
    newyeareve: [ oudejaarsavond, silvester, silvesteravond ]
    valentinesday: [ valentijnsdag, valetijnsdag ]
    aprilfools: [ 1aprilgrap, 1april ]
    independenceday: [ onafhankelijkheidsdag ]
    bastilleday: [ fransenationalefeestdag, bestormingvandebastille ]
    halloweenday: [ halloween, allerheiligenavond ]
    allhallowday: [ allerheiligen ]
    allsaintsday: [ allerheiligen ] # Duplicate of allhallowday?
    allsoulsday: [ allerzielen ]
    christmaseve: [ kerstavond ]
    # Holidays not celebrated extensively in the Netherlands
    columbus: [ columbusday ] # TODO or remove?
    thanksgiving: [ thanksgivingday, thanksgiving, dankzeggingsdag ] 
    martinlutherking: [ martinlutherkingday, martinlutherkingjrday ] # TODO or remove?
    washingtonsbirthday: [ washingtonsbirthday, washingtonbirthday ] # TODO or remove?
    canberra: [ canberraday ] # TODO or remove?
    memorial: [ memorialday, memorial day ] # US only, no Dutch variant
    yuandan: [ yuandan ] # TODO or remove?
    maosbirthday: [ maosbirthday ] # TODO or remove?
    youthday: [ youthday ] # TODO or remove?
    childrenday: [ childrenday, childday ] # TODO or remove?
    stgeorgeday: [ sintjoris ]
    mayday: [ mayday ]
    cincodemayoday: [ cincodemayo ]
    baptisteday: [ baptisteday ] # TODO or remove?
    usindependenceday: [ amerikaanseonafhankelijkheidsdag, usonafhankelijkheidsdag ]
    stpatrickday: [ stpatrickday ] # TODO or remove?
    whiteloverday: [ whiteloverday ] # TODO or remove?
    loverday: [ loverday ] # TODO or remove?
    groundhougday: [ groundhougday, bosmarmottendag ]
    inaugurationday: [ inaugurationday, inauguratiedag ] 
    arborday: [ arborday ] # TODO or remove?
    guyfawkesday: [ guy fawkes day, guy fawkes night, bonfire night, firework night ] # TODO or remove?

WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'jaren 0': 0 
    'jaren nul': 0
    'jaren 10': 10
    'jaren tien': 10 
    'jaren 20': 20
    'jaren twintig': 20
    'twintiger jaren': 20
    'jaren 30': 30
    'jaren dertig': 30
    'dertiger jaren': 30
    'jaren 40': 40
    'jaren veertig': 40
    'veertiger jaren': 40
    'jaren 50': 50
    'jaren vijftig': 50
    'vijftiger jaren': 50
    'jaren 60': 60
    'jaren zestig': 60
    'zestiger jaren': 60
    'jaren 70': 70
    'jaren zeventig': 70
    'zeventiger jaren': 70
    'jaren 80': 80
    'jaren tachtig': 80
    'tachtiger jaren': 80
    'jaren 90': 90
    'jaren negentig': 90
    'negentiger jaren': 90
    #TODO Aanvullen met 19e eeuw etc?
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    '21e eeuw': 2000
    'eenentwintigste eeuw': 2000
    'tweeduizend': 2000
DefaultLanguageFallback: 'DMY'
SuperfluousWordList: !list
  types: [ string ]
  entries:
    - preferably
    - how about
    - maybe
    - say
    - like
DurationDateRestrictions: [ vandaag, nu ]
# For DurationDateRestrictions, only translate these terms if this particular circumstance applies in the target language. If not, keep it empty. 
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '\\bmorning|afternoon|evening|night|day\\b': '\\bgood\\s+(morning|afternoon|evening|night|day)\\b'
    '\\bmay\\b': '\\b((^may i)|(i|you|he|she|we|they)\\s+may|(may\\s+((((also|not|(also not)|well)\\s+)?(be|contain|constitute|email|e-mail|take|have|result|involve|get|work|reply))|(or may not))))\\b'
# For TimeOfDay resolution
MorningTermList: !list
  types: [ string ]
  entries: 
    - morgen # ambiguous (morning vs tomorrow)
AfternoonTermList: !list
  types: [ string ]
  entries: 
    - middag
EveningTermList: !list
  types: [ string ]
  entries: 
    - avond
DaytimeTermList: !list
  types: [ string ]
  entries: 
    - dag
    - overdag
NightTermList: !list
  types: [ string ]
  entries: 
    - nacht
SameDayTerms: !list
  types: [ string ]
  entries: 
    - vandaag
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - morgen
    - dag na
    - volgende dag
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - gisteren
    - dag voor
    - vorige dag
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - overmorgen
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - eergisteren
# For DatePeriodParserConfiguration Logic
FutureTerms: !list
  types: [ string ]
  entries:
    - deze
    - volgende
    - dit 
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - vorige
    - laatste
MonthTerms: !list
  types: [ string ]
  entries:
    - maand
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - maand tot heden
    - vanaf vorig maandeinde
WeekendTerms: !list
  types: [ string ]
  entries:
    - weekend
WeekTerms: !list
  types: [ string ]
  entries:
    - week
YearTerms: !list
  types: [ string ]
  entries:
    - jaar
GenericYearTerms: !list
  types: [ string ]
  entries: 
    - j
YearToDateTerms: !list
  types: [ string ]
  entries:
    - jaar tot heden
    - vanaf vorig jaareinde
...
